{"version":3,"sources":["./src/app/components/task-manager/task-content/task-content.component.html","./src/app/components/task-manager/task-content/task-content.component.ts","./src/app/components/task-manager/task-manager-box/task-manager-box.component.ts","./src/app/components/task-manager/task-manager-box/task-manager-box.component.html","./src/app/components/task-manager/task-indicator/task-indicator.component.ts","./src/app/components/task-manager/task-indicator/task-indicator.component.html","./src/app/components/task-manager/task-manager.service.ts","./src/app/components/dash-board/dash-board-routing.module.ts","./src/app/@shared/animations/slideleft.ts","./src/app/components/dash-board/dash-board.module.ts","./src/app/components/dash-board/dash-board.component.ts","./src/app/components/dash-board/dash-board.component.html","./src/app/components/task-manager/task-manager.component.ts","./src/app/components/task-manager/task-manager.component.html","./src/app/components/task-manager/state/task-manager.effect.ts","./src/app/components/event-stream/event-stream.module.ts","./src/app/components/task-manager/state/task-manager.reducer.ts","./src/app/components/task-manager/state/task-manager.action.ts","./src/app/components/event-stream/event-stream.component.ts","./src/app/components/event-stream/event-stream.component.html","./src/app/@shared/animations/scrollLeft.ts","./src/app/components/task-manager/state/task-manager.selector.ts","./src/app/@shared/animations/hideLastItem.ts","./src/app/components/task-manager/task-manager.module.ts","./src/app/@shared/enums/task-indicator.enum.ts","./src/app/@shared/animations/index.ts","./src/app/components/task-manager/category/category.component.ts","./src/app/components/task-manager/category/category.component.html","./src/app/components/task-manager/task-title/task-title.component.ts","./src/app/components/task-manager/task-title/task-title.component.html","./src/app/components/task-manager/models/category.model.ts"],"names":[],"mappings":"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","file":"components-dash-board-dash-board-module.js","sourcesContent":["<div class=\"task-content\">\r\n  <div class=\"task-content_card\">\r\n    <p class=\"task-content__paraph\">{{ content }}</p>\r\n    <div class=\"activation-code-form\" id=\"activation-code-id\" #activationCode>\r\n      <input\r\n        *ngFor=\"let number of numbers\"\r\n        class=\"activation-code\"\r\n        type=\"number\"\r\n        maxlength=\"1\"\r\n        [value]=\"activationCode\"\r\n        onKeyPress=\"if(this.value.length==1) return false;\"\r\n        min=\"0\"\r\n        max=\"9\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  HostListener,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\n// Model\r\nimport { Task } from '@components/task-manager/models/category.model';\r\n\r\n@Component({\r\n  selector: 'app-task-content',\r\n  templateUrl: './task-content.component.html',\r\n  styleUrls: ['./task-content.component.scss'],\r\n})\r\nexport class TaskContentComponent implements OnInit {\r\n  @Input() content = '';\r\n  @Input() img = '';\r\n  @ViewChild('activationCode') activationCode;\r\n  numbers;\r\n\r\n  @HostListener('keyup', ['$event']) onKeyDown(e: any) {\r\n    const key = e.keyCode || e.charCode;\r\n    const previous: any = e.srcElement.previousSibling;\r\n    if (key === 8 || key === 46) {\r\n      if (previous != null) {\r\n        previous.focus();\r\n        return;\r\n      }\r\n    }\r\n    if (e.srcElement.maxLength === e.srcElement.value.length) {\r\n      e.preventDefault();\r\n\r\n      let nextControl: any = e.srcElement.nextElementSibling;\r\n      let addErrorFlag = true;\r\n      while (addErrorFlag) {\r\n        if (nextControl) {\r\n          if (nextControl.type === e.srcElement.type) {\r\n            nextControl.focus();\r\n            return;\r\n          } else {\r\n            nextControl = nextControl.nextElementSibling;\r\n          }\r\n        } else {\r\n          this.addError();\r\n          addErrorFlag = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor() {\r\n    this.numbers = [0, 1, 2, 3, 4, 5, 6, 7];\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  addError() {\r\n    const numberArray = document.querySelectorAll('.activation-code');\r\n\r\n    numberArray.forEach((element) => {\r\n      element.classList.add('error');\r\n    });\r\n    setTimeout(() => {\r\n      this.removeError(numberArray);\r\n    }, 850);\r\n    this.clearNumberField();\r\n  }\r\n\r\n  removeError(numberArray: any) {\r\n    numberArray.forEach((element) => {\r\n      element.classList.remove('error');\r\n    });\r\n  }\r\n\r\n  clearNumberField() {\r\n    const children = this.activationCode.nativeElement.children;\r\n    for (const child of children) {\r\n      child.value = '';\r\n    }\r\n    children[0].focus();\r\n  }\r\n}\r\n","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport {\r\n  CategoryData,\r\n  Task,\r\n} from '@components/task-manager/models/category.model';\r\n\r\n// State\r\nimport * as TaskManagerState from '@components/task-manager/state/task-manager.state';\r\n\r\n// Selectors\r\nimport * as TaskManagerSelectors from '@components/task-manager/state/task-manager.selector';\r\n\r\n// Actions\r\nimport * as TaskManagerActions from '@components/task-manager/state/task-manager.action';\r\n\r\n// Animations\r\nimport * as Animations from '@shared/animations';\r\n\r\n@Component({\r\n  selector: 'app-task-manager-box',\r\n  templateUrl: './task-manager-box.component.html',\r\n  styleUrls: ['./task-manager-box.component.scss'],\r\n})\r\nexport class TaskManagerBoxComponent implements OnInit {\r\n  isCompleted$: Observable<boolean> = of();\r\n  apiData$: Observable<CategoryData[]> = of();\r\n  currentTask$: Observable<Task> = of();\r\n  currentCategoryData$: Observable<CategoryData> = of();\r\n\r\n  // UI variables\r\n  ProgressBar = 'progress-bar';\r\n  MoveLeft = 'move-left';\r\n  MoveRight = 'move-right';\r\n\r\n  constructor(private appState: Store<TaskManagerState.State>) {}\r\n\r\n  @HostListener('mouseover') onMouseOver() {\r\n    const element = document.querySelector('.task-indicator');\r\n    element?.classList.add('pause');\r\n  }\r\n\r\n  @HostListener('mouseout') onMouseOut() {\r\n    const element = document.querySelector('.task-indicator');\r\n    element?.classList.remove('pause');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentTask$ = this.appState.select(\r\n      TaskManagerSelectors.getCurrentTaskSelector\r\n    );\r\n    this.isCompleted$ = this.appState.select(\r\n      TaskManagerSelectors.displayLottieSeletor\r\n    );\r\n\r\n    this.apiData$ = this.appState.select(\r\n      TaskManagerSelectors.getCategoryDataSelector\r\n    );\r\n\r\n    this.currentCategoryData$ = this.appState.select(\r\n      TaskManagerSelectors.getCurrentCategoryDataSelector\r\n    );\r\n  }\r\n\r\n  execute(event: any) {\r\n    const action = this.getAction(event);\r\n\r\n    // Temp variables\r\n    let apiData: CategoryData[] = [];\r\n    let currentCategoryData: CategoryData = { id: 0, data: [] };\r\n    let currentTask: Task = { id: '', title: '', img: '', content: '' };\r\n\r\n    // Assign value to [Temp variables]\r\n    this.currentTask$.subscribe((data) => (currentTask = data));\r\n    this.currentCategoryData$.subscribe((data) => (currentCategoryData = data));\r\n\r\n    // Find task index\r\n    const taskIndex = this.findTaskIndex(\r\n      currentTask.id,\r\n      currentCategoryData.data\r\n    );\r\n\r\n    this.appState.dispatch(action);\r\n\r\n    setTimeout(() => {\r\n      // If index === currentCategoryData.data.length: then next category\r\n      if (taskIndex === currentCategoryData.data.length - 1) {\r\n        this.apiData$.subscribe((data) => (apiData = data));\r\n\r\n        // Find current category index\r\n        const curCategogyIndex = apiData.findIndex(\r\n          (item) => item.id === currentCategoryData.id\r\n        );\r\n\r\n        this.removeTask(currentCategoryData.id, currentTask.id);\r\n        this.slideLeft();\r\n\r\n        this.appState.dispatch(\r\n          TaskManagerActions.setCurrentCategoryData({\r\n            data: apiData[curCategogyIndex + 1],\r\n          })\r\n        );\r\n\r\n        // Next task\r\n        // taskIndex no need to +1 due to - (1)\r\n        this.setCurrentTask(currentCategoryData.data[taskIndex]);\r\n      } else {\r\n        // (1) - Remove current task\r\n        this.removeTask(currentCategoryData.id, currentTask.id);\r\n\r\n        this.slideLeft();\r\n\r\n        // Next task\r\n        this.setCurrentTask(currentCategoryData.data[taskIndex]);\r\n      }\r\n    }, 2000);\r\n  }\r\n\r\n  private removeTask(cateId: number, taskId: string) {\r\n    this.appState.dispatch(\r\n      TaskManagerActions.removeTask({\r\n        cateId,\r\n        taskId,\r\n      })\r\n    );\r\n  }\r\n\r\n  private setCurrentTask(task: Task) {\r\n    this.appState.dispatch(\r\n      TaskManagerActions.setCurrentTask({\r\n        task,\r\n      })\r\n    );\r\n  }\r\n\r\n  private getAction(actionName: string) {\r\n    let action;\r\n    switch (actionName) {\r\n      case 'completeTask':\r\n        action = TaskManagerActions.completeTask();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return action;\r\n  }\r\n\r\n  private findTaskIndex(id: string, data: Task[]) {\r\n    return data.findIndex((item) => item.id === id);\r\n  }\r\n\r\n  private slideLeft() {\r\n    Animations.slideLeftLastItem(\r\n      this.ProgressBar,\r\n      this.MoveRight,\r\n      this.MoveLeft\r\n    );\r\n  }\r\n\r\n  private getElementWithClass(className: string) {\r\n    return document.getElementsByClassName(className);\r\n  }\r\n\r\n  private removeClass(element: HTMLElement | Element, className: string = '') {\r\n    if (!element) {\r\n      return;\r\n    }\r\n    element.classList.remove(className);\r\n  }\r\n\r\n  private addClass(element: HTMLElement | Element, className: string = '') {\r\n    if (!element) {\r\n      return;\r\n    }\r\n    element.classList.add(className);\r\n  }\r\n}\r\n","<div class=\"task-manager-box\">\r\n  <ng-container *ngIf=\"currentTask$ | async as currentTask\">\r\n    <app-task-title [title]=\"currentTask.title\"></app-task-title>\r\n\r\n    <app-task-content\r\n      [content]=\"currentTask.content\"\r\n      [img]=\"currentTask.img\"\r\n    ></app-task-content>\r\n\r\n    <div class=\"task-manager-box_button\">\r\n      <app-primary-button\r\n        [title]=\"'Click here'\"\r\n        [colour]=\"'green'\"\r\n        [actionName]=\"'completeTask'\"\r\n        (executeAction)=\"execute($event)\"\r\n      ></app-primary-button>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"isCompleted$ | async\">\r\n    <div class=\"lottie\">\r\n      <lottie-player\r\n        src=\"/assets/lottie/lottie-check-success.json\"\r\n        background=\"transparent\"\r\n        style=\"width: 300px; height: 300px\"\r\n        autoplay\r\n      >\r\n      </lottie-player>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  Input,\r\n  OnChanges,\r\n  ViewChild,\r\n  ElementRef,\r\n  // Renderer2,\r\n} from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Model\r\nimport {\r\n  CategoryData,\r\n  Task,\r\n} from '@components/task-manager/models/category.model';\r\n\r\n// State\r\nimport * as TaskManagerState from '@components/task-manager/state/task-manager.state';\r\n\r\n// Selectors\r\nimport * as TaskManagerSelectors from '@components/task-manager/state/task-manager.selector';\r\n\r\n// Actions\r\nimport * as TaskManagerActions from '@components/task-manager/state/task-manager.action';\r\n\r\n// Enums\r\nimport { TaskIndicator } from '@app/@shared/enums/task-indicator.enum';\r\n\r\n// Animations\r\nimport * as Animations from '@shared/animations';\r\n\r\n@Component({\r\n  selector: 'app-task-indicator',\r\n  templateUrl: './task-indicator.component.html',\r\n  styleUrls: ['./task-indicator.component.scss'],\r\n})\r\nexport class TaskIndicatorComponent\r\n  implements OnInit, AfterViewInit, OnChanges {\r\n  // TODO: ngOnChanges not able to triggered if remove Input\r\n  @Input() currentTask: CategoryData = { id: 0, data: [] };\r\n\r\n  @ViewChild('taskIndicator') taskIndicator!: ElementRef;\r\n\r\n  currentCategoryData$: Observable<CategoryData> = of();\r\n  currentCategoryData: CategoryData = { id: 0, data: [] };\r\n  progress;\r\n\r\n  // UI variables\r\n  LastItem = TaskIndicator.LastItem;\r\n  ItemWithTitle = TaskIndicator.ItemWithTitle;\r\n\r\n  Icon = 'icon';\r\n  Flex0 = 'flex-0';\r\n  Active = 'active';\r\n  Passed = 'passed';\r\n  BGIcon = 'bgicon';\r\n  BGGrey = 'bg-grey';\r\n  MoveLeft = 'move-left';\r\n  MoveRight = 'move-right';\r\n  BorderIcon = 'border-icon';\r\n  ProgressBar = 'progress-bar';\r\n  DisplayNone = 'display-none';\r\n  ProgressValue = 'progress-value';\r\n\r\n  // TransX\r\n  // count = 1;\r\n  // transX;\r\n\r\n  constructor(\r\n    private appState: Store<TaskManagerState.State> // private renderer: Renderer2\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(change) {\r\n    if (change) {\r\n      this.currentCategoryData$ = this.appState.select(\r\n        TaskManagerSelectors.getCurrentCategoryDataSelector\r\n      );\r\n      this.currentCategoryData$.subscribe(\r\n        (res) => (this.currentCategoryData = res)\r\n      );\r\n\r\n      this.focusIcon();\r\n\r\n      setTimeout(() => {\r\n        if (this.currentCategoryData.data.length > TaskIndicator.LastItem) {\r\n          this.hideLastItem();\r\n        }\r\n        this.runAnimation();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.focusIcon();\r\n  }\r\n\r\n  selectTask(data: Task, index: number) {\r\n    if (index === 9) {\r\n      return;\r\n    }\r\n    const idTemp = this.ProgressBar.concat('_');\r\n    const classElement = this.getElementWithClass(this.ProgressBar);\r\n    const classLength = classElement.length;\r\n    const item: Element[] = [];\r\n\r\n    for (let i = 0; i < classLength; i++) {\r\n      // Reset style\r\n      this.removeClass(classElement[i], this.BGGrey);\r\n\r\n      // Find elements to run animation\r\n      if (parseInt(classElement[i].id.replace(idTemp, ''), 0) >= index) {\r\n        item.push(classElement[i].children[0]);\r\n      } else {\r\n        // Add background color for elements, which do not run animation\r\n        this.addClass(classElement[i], this.BGGrey);\r\n      }\r\n    }\r\n\r\n    this.runAnimation(item);\r\n    this.appState.dispatch(\r\n      TaskManagerActions.getCurrentTaskById({ id: data.id })\r\n    );\r\n  }\r\n\r\n  scrollLeft() {\r\n    Animations.scrollLeft(this.ProgressBar, this.Flex0, this.DisplayNone);\r\n  }\r\n\r\n  private runAnimation(currentElement: Element[] = []) {\r\n    this.progress =\r\n      currentElement.length > 0\r\n        ? currentElement\r\n        : Array.from(document.querySelectorAll('.'.concat(this.ProgressValue)));\r\n\r\n    this.playNext();\r\n    this.progress.map((el) => {\r\n      el.addEventListener('animationend', (e) => this.playNext(e));\r\n    });\r\n  }\r\n\r\n  private playNext = (e?: any) => {\r\n    const current = e && e.target;\r\n    let next;\r\n    if (current) {\r\n      const currentIndex = this.progress.indexOf(current);\r\n      if (currentIndex < this.progress.length) {\r\n        next = this.progress[currentIndex + 1];\r\n      }\r\n      this.removeClass(current, this.Active);\r\n      this.addClass(current, this.Passed);\r\n      if (currentIndex === this.progress.length - 1 && e !== undefined) {\r\n        let id = 0;\r\n        this.currentCategoryData$.subscribe((item) => (id = item.id));\r\n        if (id) {\r\n          const iconId = this.Icon.concat('-') + (id + 1);\r\n          setTimeout(() => {\r\n            this.getElementWithId(iconId)?.click();\r\n          }, 200);\r\n        }\r\n      }\r\n    }\r\n    if (!next) {\r\n      next = this.removeAnimation();\r\n    }\r\n    if (next) {\r\n      this.addClass(next, this.Active);\r\n      // Get task content\r\n      setTimeout(() => {\r\n        // Fix: Expression has changed after it was checked\r\n        this.getTaskContent(next.id);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  private removeAnimation() {\r\n    this.progress.map((el) => {\r\n      this.removeClass(el, this.Active);\r\n      this.removeClass(el, this.Passed);\r\n    });\r\n    return this.progress[0];\r\n  }\r\n\r\n  private focusIcon() {\r\n    let id = 0;\r\n    this.currentCategoryData$.subscribe((item) => (id = item.id));\r\n    if (id) {\r\n      const iconId = this.BGIcon.concat('-') + id;\r\n      const element = this.getElementWithId(iconId);\r\n\r\n      // Remove focus\r\n      const bgIcon = document.querySelectorAll('.'.concat(this.BGIcon)) as any;\r\n      if (bgIcon.length > 0) {\r\n        bgIcon.forEach((ele) => this.removeClass(ele, this.BorderIcon));\r\n      }\r\n\r\n      // Add focus to active category\r\n      if (element) {\r\n        this.addClass(element, this.BorderIcon);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getTaskContent(id: string) {\r\n    this.appState.dispatch(TaskManagerActions.getCurrentTaskById({ id }));\r\n  }\r\n\r\n  private removeClass(element: HTMLElement | Element, className: string = '') {\r\n    if (!element) {\r\n      return;\r\n    }\r\n    element.classList.remove(className);\r\n  }\r\n\r\n  private addClass(element: HTMLElement | Element, className: string = '') {\r\n    if (!element) {\r\n      return;\r\n    }\r\n    element.classList.add(className);\r\n  }\r\n\r\n  private getElementWithId(id: string) {\r\n    return document.getElementById(id);\r\n  }\r\n\r\n  private getElementWithClass(className: string) {\r\n    return document.getElementsByClassName(className);\r\n  }\r\n\r\n  private slideLeft() {\r\n    // Animation is triggered when a task done\r\n    Animations.slideLeftLastItem(\r\n      this.ProgressBar,\r\n      this.MoveRight,\r\n      this.MoveLeft\r\n    );\r\n  }\r\n\r\n  // moveTaskIndicator() {\r\n  //   // const taskIndicatorContainer = document.querySelector('#task-indicatior');\r\n\r\n  //   const progressbar: HTMLParagraphElement = this.renderer.createElement(\r\n  //     'div'\r\n  //   );\r\n  //   const progressvalue: HTMLParagraphElement = this.renderer.createElement(\r\n  //     'div'\r\n  //   );\r\n  //   this.addClass(progressvalue, 'task-indicator-count');\r\n  //   this.renderer.appendChild(this.taskIndicator.nativeElement, progressbar);\r\n  //   progressbar.appendChild(progressvalue);\r\n  //   // Count move left\r\n  //   this.transX = -112 * this.count;\r\n  //   this.count++;\r\n  //   // Add width into task container\r\n  //   const widthTaskContainer = this.taskIndicator.nativeElement.offsetWidth;\r\n  //   const increaseContainer = widthTaskContainer + 112;\r\n  //   this.renderer.setStyle(\r\n  //     this.taskIndicator.nativeElement,\r\n  //     'width',\r\n  //     increaseContainer + 'px'\r\n  //   );\r\n  // }\r\n\r\n  private hideLastItem() {\r\n    Animations.hideLastItem(this.ProgressBar, this.Flex0);\r\n  }\r\n}\r\n","<ng-container *ngIf=\"currentCategoryData$ | async as currentCategoryData\">\r\n  <div *ngIf=\"currentCategoryData.data.length > 0\" class=\"task-indicator\">\r\n    <div class=\"progress-container\" id=\"task-indicatior\" #taskIndicator>\r\n      <ng-container *ngFor=\"let task of currentCategoryData.data; index as i\">\r\n        <div\r\n          *ngIf=\"i < LastItem\"\r\n          id=\"progress-bar_{{ i }}\"\r\n          class=\"progress-bar\"\r\n          (click)=\"selectTask(task, i)\"\r\n        >\r\n          <div class=\"progress-value\" id=\"{{ task.id }}\"></div>\r\n          <span\r\n            *ngIf=\"currentCategoryData.data.length < ItemWithTitle\"\r\n            class=\"task_title\"\r\n          >\r\n            {{ task.title }}\r\n          </span>\r\n        </div>\r\n\r\n        <div\r\n          *ngIf=\"i === currentCategoryData.data.length - 1 && i >= LastItem\"\r\n          id=\"progress-bar_{{ i }}\"\r\n          class=\"progress-bar\"\r\n          (click)=\"selectTask(task, i)\"\r\n        >\r\n          <div class=\"progress-value\" id=\"{{ task.id }}\"></div>\r\n        </div>\r\n\r\n        <div\r\n          *ngIf=\"i === currentCategoryData.data.length - 1 && i >= LastItem\"\r\n          class=\"progress-bar-fixed\"\r\n        >\r\n          <ng-container>\r\n            <div class=\"no-click\">\r\n              <span class=\"task_title\"\r\n                >+ {{ currentCategoryData.data.length - LastItem }}</span\r\n              >\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <button (click)=\"scrollLeft()\">Test</button>\r\n  <ng-container *ngIf=\"currentCategoryData.data.length > 0\">\r\n    <app-task-manager-box></app-task-manager-box>\r\n  </ng-container>\r\n</ng-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport * as TaskManagerModel from '@components/task-manager/models/task-manager.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TaskManagerService {\r\n  private categoriesUrl = 'https://peax-demo.herokuapp.com/api/category';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllCategories(): Observable<TaskManagerModel.CategoryModel[]> {\r\n    return this.http\r\n      .get<TaskManagerModel.CategoryModel[]>(this.categoriesUrl)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(err: any) {\r\n    let errorMessage: string;\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n    }\r\n    console.error(err);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashBoardComponent } from './dash-board.component';\r\n\r\nconst routes: Routes = [\r\n  // Module is lazy loaded, see app-routing.module.ts\r\n  { path: '', component: DashBoardComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n})\r\nexport class DashBoardRoutingModule {}\r\n","export const slideLeftLastItem = (\r\n  selector: string,\r\n  cssClass1: string,\r\n  cssClass2: string\r\n) => {\r\n  const elements = document.getElementsByClassName(selector);\r\n  const eleLength = elements.length;\r\n\r\n  elements[eleLength - 1].classList.add(cssClass1);\r\n\r\n  setTimeout(() => {\r\n    elements[eleLength - 1].classList.add(cssClass2);\r\n  }, 300);\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { EventStreamModule } from '../event-stream/event-stream.module';\r\nimport { TaskManagerModule } from '../task-manager/task-manager.module';\r\nimport { DashBoardRoutingModule } from './dash-board-routing.module';\r\nimport { DashBoardComponent } from './dash-board.component';\r\n\r\n@NgModule({\r\n  declarations: [DashBoardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    EventStreamModule,\r\n    DashBoardRoutingModule,\r\n    TaskManagerModule,\r\n  ],\r\n  exports: [DashBoardComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class DashBoardModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dash-board',\r\n  templateUrl: './dash-board.component.html',\r\n  styleUrls: ['./dash-board.component.scss']\r\n})\r\nexport class DashBoardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <app-task-manager></app-task-manager>\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <app-event-stream></app-event-stream>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<app-task-manager></app-task-manager>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Model\r\nimport { Category, CategoryData } from '@components/task-manager/models/category.model';\r\n\r\n// State\r\nimport * as TaskManagerState from '@components/task-manager/state/task-manager.state';\r\n\r\n// Selectors\r\nimport * as TaskManagerSelectors from '@components/task-manager/state/task-manager.selector';\r\n\r\n// Actions\r\nimport * as TaskManagerActions from '@components/task-manager/state/task-manager.action';\r\nimport { getError } from '@components/task-manager/state/task-manager.selector';\r\n\r\n@Component({\r\n  selector: 'app-task-manager',\r\n  templateUrl: './task-manager.component.html',\r\n  styleUrls: ['./task-manager.component.scss'],\r\n})\r\nexport class TaskManagerComponent implements OnInit {\r\n  categories$: Observable<Category[]> = of();\r\n  currentTask$: Observable<CategoryData> = of();\r\n  errorMessage$: Observable<string> = of();\r\n\r\n  constructor(private store: Store<TaskManagerState.State>) {}\r\n\r\n  ngOnInit() {\r\n    this.categories$ = this.store.select(TaskManagerSelectors.getCategoriesSelector);\r\n    this.currentTask$ = this.store.select(\r\n      TaskManagerSelectors.getCurrentCategoryDataSelector\r\n    );\r\n\r\n    this.store.dispatch(TaskManagerActions.getAllCategories());\r\n    this.errorMessage$ = this.store.select(getError);\r\n  }\r\n}\r\n","<div class=\"container-fluid wrapper\">\r\n  <ng-container *ngIf=\"categories$ | async as categories\">\r\n    <app-category\r\n      *ngIf=\"categories.length > 0\"\r\n      [category]=\"categories\"\r\n    ></app-category>\r\n\r\n    <div *ngIf=\"categories.length === 0\">\r\n      <img src=\"../assets/icons/Nothing.png\" alt=\"Nothing\" />\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"currentTask$ | async as currentTask\">\r\n    <app-task-indicator\r\n      *ngIf=\"currentTask.data.length > 0\"\r\n      [currentTask]=\"currentTask\"\r\n    ></app-task-indicator>\r\n  </ng-container>\r\n</div>\r\n<div *ngIf=\"errorMessage$ | async as errorMessage\"\r\n     class=\"alert alert-danger\">\r\n  Error: {{ errorMessage }}\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { mergeMap, map, catchError, concatMap, tap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { TaskManagerService } from '@components/task-manager/task-manager.service';\r\n\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport * as TaskManagerActions from '@components/task-manager/state/task-manager.action';\r\nimport {\r\n  createCategoryDataFromCategoryModel,\r\n  createCategoryFromCategoryModel,\r\n} from '../models/category.model';\r\n\r\n@Injectable()\r\nexport class TaskManagerEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private taskManagerService: TaskManagerService\r\n  ) {}\r\n\r\n  gettAllCategories$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(TaskManagerActions.getAllCategories),\r\n      mergeMap(() =>\r\n        this.taskManagerService.getAllCategories().pipe(\r\n          map((categoryModels) =>\r\n            TaskManagerActions.getAllCategoriesSuccess({\r\n              category: createCategoryFromCategoryModel(categoryModels),\r\n              data: createCategoryDataFromCategoryModel(categoryModels),\r\n            })\r\n          ),\r\n          catchError((error) =>\r\n            of(TaskManagerActions.getAllCategoriesFailure({ error }))\r\n          )\r\n        )\r\n      )\r\n    );\r\n  });\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EventStreamComponent } from './event-stream.component';\r\nimport { SharedModule } from '@app/@shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [EventStreamComponent],\r\n  imports: [CommonModule, SharedModule],\r\n  exports: [EventStreamComponent],\r\n})\r\nexport class EventStreamModule {}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { Category } from '@components/task-manager/models/category.model';\r\nimport * as TaskManagerActions from '@components/task-manager/state/task-manager.action';\r\nimport { CategoryState } from '@components/task-manager/state/task-manager.state';\r\n\r\nexport const initialState: CategoryState = {\r\n  category: [],\r\n  data: [],\r\n  currentCategoryData: {\r\n    id: 0,\r\n    data: [],\r\n  },\r\n  currentTask: { id: '', content: '', img: '', title: '' },\r\n  hasDone: false,\r\n  error: ''\r\n};\r\n\r\nexport const appReducer = createReducer(\r\n  initialState,\r\n  on(TaskManagerActions.getCurrentCategoryData, (state, action) => {\r\n    return {\r\n      ...state,\r\n      currentCategoryData:\r\n        state.data.filter((item) => item.id === action.id)[0] || {},\r\n    };\r\n  }),\r\n  on(TaskManagerActions.removeCategory, (state, action) => {\r\n    return {\r\n      ...state,\r\n      category: state.category.filter((item) => item.id !== action.id),\r\n    };\r\n  }),\r\n  on(TaskManagerActions.getCurrentTaskById, (state, action) => {\r\n    return {\r\n      ...state,\r\n      currentTask:\r\n        state.currentCategoryData.data.filter(\r\n          (item) => item.id === action.id\r\n        )[0] || {},\r\n    };\r\n  }),\r\n  on(TaskManagerActions.completeTask, (state) => {\r\n    return {\r\n      ...state,\r\n      hasDone: true,\r\n    };\r\n  }),\r\n  on(TaskManagerActions.setCurrentCategoryData, (state, action) => {\r\n    return {\r\n      ...state,\r\n      currentCategoryData: action.data,\r\n    };\r\n  }),\r\n  on(TaskManagerActions.setCurrentTask, (state, action) => {\r\n    return {\r\n      ...state,\r\n      hasDone: false,\r\n      currentTask: action.task,\r\n    };\r\n  }),\r\n  on(TaskManagerActions.removeTask, (state, action) => {\r\n    let categories: Category[] = [];\r\n    let currentCate = state.category.filter(\r\n      (item) => item.id === action.cateId\r\n    )[0];\r\n    if (currentCate.pendingTask > 1) {\r\n      currentCate = {\r\n        id: currentCate.id,\r\n        name: currentCate.name,\r\n        pendingTask: currentCate.pendingTask - 1,\r\n      };\r\n      categories = [\r\n        ...state.category.filter((item) => item.id !== action.cateId),\r\n        currentCate,\r\n      ].sort((a, b) => a.id - b.id);\r\n    } else {\r\n      categories = [\r\n        ...state.category.filter((item) => item.id !== action.cateId),\r\n      ].sort((a, b) => a.id - b.id);\r\n    }\r\n\r\n    let apiData = state.data.filter((item) => item.id === action.cateId)[0];\r\n    apiData = {\r\n      id: apiData.id,\r\n      data: apiData.data.filter((i) => i.id !== action.taskId),\r\n    };\r\n\r\n    return {\r\n      ...state,\r\n      category: [...categories],\r\n      data: [\r\n        ...state.data.filter((item) => item.id !== action.cateId),\r\n        apiData,\r\n      ].sort((a, b) => a.id - b.id),\r\n      currentCategoryData: {\r\n        id: state.currentCategoryData.id,\r\n        data: state.currentCategoryData.data.filter(\r\n          (item) => item.id !== action.taskId\r\n        ),\r\n      },\r\n    };\r\n  }),\r\n  on(TaskManagerActions.getAllCategoriesSuccess, (state, action) => {\r\n    return {\r\n      ...state,\r\n      hasDone: false,\r\n      category: action.category,\r\n      data: action.data,\r\n      currentCategoryData: action.data[0]\r\n    };\r\n  }),\r\n  on(TaskManagerActions.getAllCategoriesFailure, (state, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    };\r\n  })\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Category, CategoryData, Task } from '@components/task-manager/models/category.model';\r\n\r\nexport const getCurrentCategoryData = createAction(\r\n  '[App] Get Current Category Data',\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const removeCategory = createAction(\r\n  '[App] Remove Category',\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const removeTask = createAction(\r\n  '[App] Remove Task',\r\n  props<{ cateId: number; taskId: string }>()\r\n);\r\n\r\nexport const getCurrentTaskById = createAction(\r\n  '[App] Get Current Task By Id',\r\n  props<{ id: string }>()\r\n);\r\n\r\nexport const completeTask = createAction('[App] Complete Task');\r\n\r\nexport const setCurrentCategoryData = createAction(\r\n  '[App] Set Current Category Data',\r\n  props<{ data: CategoryData }>()\r\n);\r\n\r\nexport const setCurrentTask = createAction(\r\n  '[App] Set Current Task',\r\n  props<{ task: Task }>()\r\n);\r\n\r\nexport const getAllCategories = createAction(\r\n  '[App] Get All Categories'\r\n);\r\n\r\nexport const getAllCategoriesSuccess = createAction(\r\n  '[App] Get All Categories Load Success',\r\n  props<{\r\n    category: Category[],\r\n    data: CategoryData[]\r\n  }>()\r\n);\r\n\r\nexport const getAllCategoriesFailure = createAction(\r\n  '[App] Get All Categories Fail',\r\n  props<{ error: string }>()\r\n);\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-event-stream',\r\n  templateUrl: './event-stream.component.html',\r\n  styleUrls: ['./event-stream.component.scss'],\r\n})\r\nexport class EventStreamComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<p>event-stream works!</p>\r\n","export const scrollLeft = (\r\n  selector: string,\r\n  cssClass1: string,\r\n  cssClass2: string\r\n) => {\r\n  const elements = document.getElementsByClassName(selector);\r\n\r\n  elements[elements.length - 1].classList.remove(cssClass1);\r\n\r\n  elements[0].classList.add(cssClass1);\r\n  setTimeout(() => {\r\n    elements[0].classList.add(cssClass2);\r\n  }, 300);\r\n};\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { CategoryState, State } from './task-manager.state';\r\n\r\nexport const getCategoryFeatureState = createFeatureSelector<\r\n  State,\r\n  CategoryState\r\n>('categoryState');\r\n\r\n// Categories\r\nexport const getCategoriesSelector = createSelector(\r\n  getCategoryFeatureState,\r\n  (state) => state.category\r\n);\r\n\r\n// Data from API\r\nexport const getCategoryDataSelector = createSelector(\r\n  getCategoryFeatureState,\r\n  (state) => state.data\r\n);\r\n\r\nexport const getCurrentTaskSelector = createSelector(\r\n  getCategoryFeatureState,\r\n  (state) => state.currentTask\r\n);\r\n\r\nexport const getCurrentCategoryDataSelector = createSelector(\r\n  getCategoryFeatureState,\r\n  (state) => state.currentCategoryData\r\n);\r\n\r\nexport const displayLottieSeletor = createSelector(\r\n  getCategoryFeatureState,\r\n  (state) => state.hasDone\r\n);\r\n\r\nexport const getError = createSelector(\r\n  getCategoryFeatureState,\r\n  state => state.error\r\n);\r\n","export const hideLastItem = (selector: string, cssClass1: string) => {\r\n  const elements = document.getElementsByClassName(selector);\r\n  elements[elements.length - 1].classList.add(cssClass1);\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { SharedModule } from 'src/app/@shared/shared.module';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { TaskContentComponent } from './task-content/task-content.component';\r\nimport { TaskIndicatorComponent } from './task-indicator/task-indicator.component';\r\nimport { TaskManagerBoxComponent } from './task-manager-box/task-manager-box.component';\r\nimport { TaskManagerComponent } from './task-manager.component';\r\nimport { TaskTitleComponent } from './task-title/task-title.component';\r\n\r\n// Reducers\r\nimport * as TaskManagerReducers from '@components/task-manager/state/task-manager.reducer';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { TaskManagerEffects } from '@components/task-manager/state/task-manager.effect';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CategoryComponent,\r\n    TaskContentComponent,\r\n    TaskManagerComponent,\r\n    TaskTitleComponent,\r\n    TaskIndicatorComponent,\r\n    TaskManagerBoxComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    StoreModule.forFeature('categoryState', TaskManagerReducers.appReducer),\r\n    EffectsModule.forFeature([TaskManagerEffects]),\r\n  ],\r\n  exports: [\r\n    CategoryComponent,\r\n    TaskContentComponent,\r\n    TaskManagerComponent,\r\n    TaskTitleComponent,\r\n    TaskIndicatorComponent,\r\n    TaskManagerBoxComponent,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class TaskManagerModule {}\r\n","export enum TaskIndicator {\r\n  MaxRange = 10,\r\n  LastItem = 9,\r\n  ItemWithTitle = 7,\r\n}\r\n","export * from '@shared/animations/slideleft';\r\nexport * from '@shared/animations/scrollLeft';\r\nexport * from '@shared/animations/hideLastItem';\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { Category } from '@components/task-manager/models/category.model';\r\nimport { Store } from '@ngrx/store';\r\n\r\n// State\r\nimport * as TaskManagerState from '@components/task-manager/state/task-manager.state';\r\n\r\n// Actions\r\nimport * as TaskManagerActions from '@components/task-manager/state/task-manager.action';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.scss'],\r\n})\r\nexport class CategoryComponent implements OnInit, AfterViewInit {\r\n  private readonly ONE_CATEGORY: number = 1;\r\n  private readonly DELIMITER: string = '-';\r\n\r\n  @Input() category: Category[] = [];\r\n\r\n  @ViewChild('categoryContainer') public categoryContainer;\r\n\r\n  private moveLeftBgIconCount = 0;\r\n\r\n  private bgiconEventListener: EventListener | undefined;\r\n  private bgiconMoveLeftEventListener = new Map();\r\n\r\n  private iconEventListener: EventListener | undefined;\r\n  private iconMoveLeftEventListener = new Map();\r\n\r\n  constructor(private store: Store<TaskManagerState.State>) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit() {}\r\n\r\n  getIcon(id: number) {\r\n    switch (id) {\r\n      case 1:\r\n        return '/assets/icons/Rocket.png';\r\n      case 2:\r\n        return '/assets/icons/Message.png';\r\n      case 3:\r\n        return '/assets/icons/Contact.png';\r\n      case 4:\r\n        return '/assets/icons/BussinessAcount.png';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  selectedItem(item: Category) {\r\n    this.store.dispatch(TaskManagerActions.getCurrentCategoryData({ id: item.id }));\r\n  }\r\n\r\n  removeItem(item: Category) {\r\n    const catElement: any = this.getCategoryElementById(item.id);\r\n    if (!catElement) {\r\n      return;\r\n    }\r\n\r\n    const icon: any = catElement.lastElementChild;\r\n    icon.children[1].classList.add('display-none');\r\n\r\n    icon.children[0].classList.remove('paused');\r\n    this.iconEventListener = () => this.onIconAnimationEnd(item);\r\n    icon.children[0].addEventListener('animationend', this.iconEventListener);\r\n    icon.children[0].classList.add('icon-move');\r\n\r\n    const bgIcon: any = catElement.firstElementChild;\r\n    bgIcon.classList.remove('paused');\r\n    this.bgiconEventListener = () => this.onBgiconAnimationEnd(item);\r\n    bgIcon.addEventListener('animationend', this.bgiconEventListener);\r\n    bgIcon.classList.add('bgicon-opacity');\r\n  }\r\n\r\n  private onIconAnimationEnd(item: Category) {\r\n    const catElement: any = this.getCategoryElementById(item.id);\r\n    if (!catElement) {\r\n      return;\r\n    }\r\n    const icon: any = catElement.lastElementChild;\r\n    icon.children[0].removeEventListener(\r\n      'animationend',\r\n      this.iconEventListener\r\n    );\r\n    icon.children[0].classList.remove('icon-move');\r\n    icon.children[0].classList.add('display-none');\r\n  }\r\n\r\n  private onBgiconAnimationEnd(item: Category) {\r\n    const catElement: any = this.getCategoryElementById(item.id);\r\n    if (!catElement) {\r\n      return;\r\n    }\r\n    const bgIcon: any = catElement.firstElementChild;\r\n    bgIcon.removeEventListener('animationend', this.bgiconEventListener);\r\n    bgIcon.classList.remove('bgicon-opacity');\r\n    bgIcon.classList.add('display-none');\r\n\r\n    //  If category item is not last category, move all right categories of that item\r\n    if (\r\n      this.category.length > this.ONE_CATEGORY &&\r\n      !this.isLastCategory(item)\r\n    ) {\r\n      this.moveLeftAllCategories(item);\r\n    } else {\r\n      this.store.dispatch(\r\n        TaskManagerActions.removeCategory({\r\n          id: this.category[this.category.length - 1].id,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private moveLeftAllCategories(item: Category) {\r\n    const children = this.categoryContainer.nativeElement.children;\r\n    const count: number = children.length;\r\n    const rightCategories: Array<Category> = this.getRightCategoriesOfSelectedCategory(\r\n      item\r\n    );\r\n    for (let i = 0; i < count; i++) {\r\n      const element: any = children[i];\r\n\r\n      const elementId: string = element.firstElementChild.id;\r\n      const id: string[] = elementId.split(this.DELIMITER);\r\n      if (\r\n        Number(id[1]) !== item.id &&\r\n        rightCategories.findIndex((cat) => cat.id === Number(id[1])) > -1\r\n      ) {\r\n        this.moveLeftBgIconCount++;\r\n        //  icon\r\n        element.lastElementChild.classList.remove('paused');\r\n        this.iconMoveLeftEventListener.set(element.lastElementChild.id, () =>\r\n          this.onIconMoveLeftAnimationEnd(element.lastElementChild)\r\n        );\r\n        element.lastElementChild.addEventListener(\r\n          'animationend',\r\n          this.iconMoveLeftEventListener.get(element.lastElementChild.id)\r\n        );\r\n        element.lastElementChild.classList.add('icon-bgicon-move-left');\r\n\r\n        //  bgIcon\r\n        element.firstElementChild.classList.remove('paused');\r\n        this.bgiconMoveLeftEventListener.set(elementId, () =>\r\n          this.onBgiconMoveLeftAnimationEnd(element.firstElementChild, item)\r\n        );\r\n        element.firstElementChild.addEventListener(\r\n          'animationend',\r\n          this.bgiconMoveLeftEventListener.get(elementId)\r\n        );\r\n        element.firstElementChild.classList.add('icon-bgicon-move-left');\r\n      }\r\n    }\r\n  }\r\n\r\n  private onIconMoveLeftAnimationEnd(eventTarget: any) {\r\n    if (eventTarget) {\r\n      eventTarget.removeEventListener(\r\n        'animationend',\r\n        this.iconMoveLeftEventListener.get(eventTarget.id)\r\n      );\r\n      eventTarget.classList.remove('icon-bgicon-move-left');\r\n    }\r\n  }\r\n\r\n  private onBgiconMoveLeftAnimationEnd(\r\n    eventTarget: any,\r\n    removedItem: Category\r\n  ) {\r\n    if (eventTarget) {\r\n      eventTarget.removeEventListener(\r\n        'animationend',\r\n        this.bgiconMoveLeftEventListener.get(eventTarget.id)\r\n      );\r\n      eventTarget.classList.remove('icon-bgicon-move-left');\r\n\r\n      this.moveLeftBgIconCount--;\r\n      if (this.moveLeftBgIconCount === 0) {\r\n        const cat: any = this.getCategoryById(removedItem.id);\r\n        if (cat) {\r\n          this.store.dispatch(TaskManagerActions.removeCategory({ id: cat.id }));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getCategoryElementById(categoryId: number): any {\r\n    const children = this.categoryContainer.nativeElement.children;\r\n    const count: number = children.length;\r\n    for (let i = 0; i < count; i++) {\r\n      const element: any = children[i];\r\n\r\n      const elementId: string = element.firstElementChild.id;\r\n      const id: string[] = elementId.split(this.DELIMITER);\r\n      if (Number(id[1]) === categoryId) {\r\n        return element;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getCategoryById(categoryId: number): any {\r\n    if (this.category.length === 0) {\r\n      return null;\r\n    }\r\n    let result: any;\r\n    this.category.forEach((cat) => {\r\n      if (cat.id === categoryId) {\r\n        result = cat;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  //  Get all right categories of selected category\r\n  private getRightCategoriesOfSelectedCategory(\r\n    item: Category\r\n  ): Array<Category> {\r\n    if (this.category.length === 0) {\r\n      return new Array();\r\n    }\r\n    const itemIndex: number = this.category.findIndex(\r\n      (cat) => cat.id === item.id\r\n    );\r\n    const result = new Array();\r\n    for (let i = itemIndex + 1; i < this.category.length; i++) {\r\n      result.push(this.category[i]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private isLastCategory(item: Category): boolean {\r\n    if (item) {\r\n      const itemIndex = this.category.findIndex((cat) => cat.id === item.id);\r\n      if (itemIndex > -1 && itemIndex === this.category.length - 1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"category.length > 0\">\r\n  <div class=\"row\" #categoryContainer>\r\n    <div *ngFor=\"let item of category\">\r\n      <div class=\"bgicon paused\" \r\n        style=\"position: absolute\" \r\n        id=\"bgicon-{{item.id}}\"\r\n      ></div>      \r\n      <div\r\n        id=\"icon-{{ item.id }}\"\r\n        *ngIf=\"item.pendingTask > 0\"\r\n        class=\"icon\"\r\n        matTooltip=\"{{ item.name }}\"\r\n        (click)=\"selectedItem(item)\"\r\n      >\r\n        <img src=\"{{ getIcon(item.id) }}\" alt=\"Category\" />\r\n        <span>{{ item.pendingTask }}</span>\r\n      </div>\r\n      <div id=\"icon-{{ item.id }}\"\r\n        *ngIf=\"item.pendingTask === 0\"\r\n        class=\"icon paused\"\r\n        matTooltip=\"{{ item.name }}\"\r\n        (click)=\"removeItem(item)\"\r\n      >\r\n        <img src=\"{{ getIcon(item.id) }}\" alt=\"Category\" />\r\n        <span>{{ item.pendingTask }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-task-title',\r\n  templateUrl: './task-title.component.html',\r\n  styleUrls: ['./task-title.component.scss'],\r\n})\r\nexport class TaskTitleComponent implements OnInit {\r\n  @Input() title = '';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"task-title\">\r\n  <div class=\"task-title_card\">\r\n    <h1>{{ title }}</h1>\r\n    <div class=\"task-title__button\">\r\n      <button mat-fab color=\"primary\"></button>\r\n      <button mat-fab color=\"primary\"></button>\r\n      <button mat-fab color=\"primary\"></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CategoryModel, TaskModel } from './task-manager.model';\r\n\r\nexport interface Category {\r\n  id: number;\r\n  name: string;\r\n  pendingTask: number;\r\n}\r\n\r\nexport interface Task {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  img: string;\r\n}\r\n\r\nexport interface CategoryData {\r\n  id: number;\r\n  data: Task[];\r\n}\r\n\r\nexport function createTaskFromTaskModel(taskModel: TaskModel): Task {\r\n  const task: Task = { id: taskModel.taskId, title: taskModel.title, content: taskModel.content, img: taskModel.content };\r\n  return task;\r\n}\r\n\r\nexport function createCategoryDataFromCategoryModel(categoryModels: CategoryModel[]): CategoryData[] {\r\n  const categoryDatas: CategoryData[] = [];\r\n\r\n  categoryModels.forEach (model => {\r\n    const tasks: Task[] = [];\r\n    model.tasks.forEach(taskModel => {\r\n      tasks.push(createTaskFromTaskModel(taskModel));\r\n    });\r\n    const data: CategoryData = { id: model.categoryId, data: tasks };\r\n    categoryDatas.push(data);\r\n  });\r\n  return categoryDatas;\r\n}\r\n\r\nexport function createCategoryFromCategoryModel(categoryModels: CategoryModel[]): Category[] {\r\n  const categories: Category[] = [];\r\n\r\n  categoryModels.forEach (model => {\r\n    const category: Category = { id: model.categoryId, name: model.name, pendingTask: model.tasks.length };\r\n    categories.push(category);\r\n  });\r\n\r\n  return categories;\r\n}\r\n"],"sourceRoot":"webpack:///"}